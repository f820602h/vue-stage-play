import{_ as e,c as t,o as a,Q as s}from"./chunks/framework.6467b237.js";const g=JSON.parse('{"title":"useStagePlay","description":"","frontmatter":{},"headers":[],"relativePath":"use-stage-play.md","filePath":"use-stage-play.md"}'),n={name:"use-stage-play.md"},o=s('<h1 id="usestageplay" tabindex="-1">useStagePlay <a class="header-anchor" href="#usestageplay" aria-label="Permalink to &quot;useStagePlay&quot;">​</a></h1><p><code>useStagePlay</code> is a Composable that allows you to access relevant values and methods outside of the <code>&lt;StagePlayScene&gt;</code>. This is useful for interacting with the guided tour from other components or logic in your Vue application.</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">script</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">setup</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">lang</span><span style="color:#666666;">=</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">ts</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">&gt;</span></span>\n<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">useStagePlay</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">vue-stage-play</span><span style="color:#C98A7D99;">&quot;</span></span>\n<span class="line"><span style="color:#CB7676;">const </span><span style="color:#666666;">{</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">action</span><span style="color:#CB7676;"> </span><span style="color:#666666;">}</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#80A665;">useStagePlay</span><span style="color:#666666;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#80A665;">action</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">onBoarding</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">)</span></span>\n<span class="line"><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">script</span><span style="color:#666666;">&gt;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">script</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setup</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">lang</span><span style="color:#999999;">=</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">ts</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">&gt;</span></span>\n<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useStagePlay</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">vue-stage-play</span><span style="color:#B5695999;">&quot;</span></span>\n<span class="line"><span style="color:#AB5959;">const </span><span style="color:#999999;">{</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">action</span><span style="color:#AB5959;"> </span><span style="color:#999999;">}</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#59873A;">useStagePlay</span><span style="color:#999999;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#59873A;">action</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">onBoarding</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">)</span></span>\n<span class="line"><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">script</span><span style="color:#999999;">&gt;</span></span></code></pre></div><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td>acts</td><td><code>Record&lt;string, Ref&lt;HTMLElement | null&gt;[]&gt;</code></td></tr><tr><td>currentActName</td><td><code>Ref&lt;string&gt;</code></td></tr><tr><td>currentActSceneList</td><td><code>ComputedRef&lt;number[]&gt;</code></td></tr><tr><td>totalSceneCount</td><td><code>ComputedRef&lt;number&gt;</code></td></tr><tr><td>currentScene</td><td><code>Ref&lt;number&gt;</code></td></tr><tr><td>currentSceneOrder</td><td><code>ComputedRef&lt;number&gt;</code></td></tr><tr><td>currentActor</td><td><code>ComputedRef&lt;HTMLElement | null | undefined&gt;</code></td></tr><tr><td>hasPrevScene</td><td><code>ComputedRef&lt;boolean&gt;</code></td></tr><tr><td>hasNextScene</td><td><code>ComputedRef&lt;boolean&gt;</code></td></tr><tr><td>action</td><td><code>(actName: string, scene?: number) =&gt; void</code></td></tr><tr><td>cut</td><td><code>() =&gt; void</code></td></tr><tr><td>prevScene</td><td><code>() =&gt; void</code></td></tr><tr><td>nextScene</td><td><code>() =&gt; void</code></td></tr><tr><td>jumpToScene</td><td><code>(scene: number) =&gt; void</code></td></tr></tbody></table><h3 id="acts" tabindex="-1"><code>acts</code> <a class="header-anchor" href="#acts" aria-label="Permalink to &quot;`acts`&quot;">​</a></h3><p>All the registered acts and their corresponding scenes.</p><div class="tip custom-block" style="padding-top:8px;"><p>The acts and scenes of StagePlayScene that have not been mounted or set to skip will not be included.</p></div><h3 id="currentactname" tabindex="-1"><code>currentActName</code> <a class="header-anchor" href="#currentactname" aria-label="Permalink to &quot;`currentActName`&quot;">​</a></h3><p>The name of the act currently in progress.</p><h3 id="currentactscenelist" tabindex="-1"><code>currentActSceneList</code> <a class="header-anchor" href="#currentactscenelist" aria-label="Permalink to &quot;`currentActSceneList`&quot;">​</a></h3><p>The scene list of the act currently in progress.</p><h3 id="totalscenecount" tabindex="-1"><code>totalSceneCount</code> <a class="header-anchor" href="#totalscenecount" aria-label="Permalink to &quot;`totalSceneCount`&quot;">​</a></h3><p>The total number of scenes in the current act.</p><h3 id="currentscene" tabindex="-1"><code>currentScene</code> <a class="header-anchor" href="#currentscene" aria-label="Permalink to &quot;`currentScene`&quot;">​</a></h3><p>The number of the scene currently in progress.</p><h3 id="currentsceneorder" tabindex="-1"><code>currentSceneOrder</code> <a class="header-anchor" href="#currentsceneorder" aria-label="Permalink to &quot;`currentSceneOrder`&quot;">​</a></h3><p>The order of the scene currently in progress.</p><h3 id="currentactor" tabindex="-1"><code>currentActor</code> <a class="header-anchor" href="#currentactor" aria-label="Permalink to &quot;`currentActor`&quot;">​</a></h3><p>The template ref of highlighting <code>&lt;StagePlayScene&gt;</code>.</p><h3 id="hasprevscene" tabindex="-1"><code>hasPrevScene</code> <a class="header-anchor" href="#hasprevscene" aria-label="Permalink to &quot;`hasPrevScene`&quot;">​</a></h3><p>A boolean value indicating whether there is a previous scene in the current scene.</p><h3 id="hasnextscene" tabindex="-1"><code>hasNextScene</code> <a class="header-anchor" href="#hasnextscene" aria-label="Permalink to &quot;`hasNextScene`&quot;">​</a></h3><p>A boolean value indicating whether there is a next scene in the current scene.</p><h3 id="action" tabindex="-1"><code>action</code> <a class="header-anchor" href="#action" aria-label="Permalink to &quot;`action`&quot;">​</a></h3><p>The function to start the guided tour. By default, it will start from the first scene of the act you specify.</p><div class="tip custom-block" style="padding-top:8px;"><p>In contrast to the <a href="./stage-play-scene.html#action">action</a> in the <code>ScopedProps</code> of <code>&lt;StagePlayScene&gt;</code>, you must specify the act you wish to start through the <code>actName</code> parameter.</p></div><h3 id="cut" tabindex="-1"><code>cut</code> <a class="header-anchor" href="#cut" aria-label="Permalink to &quot;`cut`&quot;">​</a></h3><p>The function to stop the guided tour.</p><div class="tip custom-block" style="padding-top:8px;"><p>Invoking this method to stop the guided tour will not trigger the <code>onBeforeCut</code> and <code>onAfterCut</code> events within <code>&lt;StagePlayScene&gt;</code>.</p></div><h3 id="prevscene" tabindex="-1"><code>prevScene</code> <a class="header-anchor" href="#prevscene" aria-label="Permalink to &quot;`prevScene`&quot;">​</a></h3><p>The function to go back to the previous scene in the current act. If there is no active act, the function may not have any effect.</p><h3 id="prevscene-1" tabindex="-1"><code>prevScene</code> <a class="header-anchor" href="#prevscene-1" aria-label="Permalink to &quot;`prevScene`&quot;">​</a></h3><p>The function to go to the next scene in the current act. If there is no active act, the function may not have any effect.</p><h3 id="jumptoscene" tabindex="-1"><code>jumpToScene</code> <a class="header-anchor" href="#jumptoscene" aria-label="Permalink to &quot;`jumpToScene`&quot;">​</a></h3><p>The function to navigate to a specific scene in the current act, please provide the scene number as an argument. If there is no active act, the function may not have any effect.</p>',36),c=[o];function r(l,p,d,i,u,h){return a(),t("div",null,c)}const m=e(n,[["render",r]]);export{g as __pageData,m as default};
